# This is an example ellycache configuration file with all possible options.
# Use this as a starting point to create your own configuration file.

# Syntax of this file:
# * The file itself is in HCL (https://github.com/hashicorp/hcl) format.
# * Strings are enclosed in double quotes, and you can use escape sequences
#   like \", \n etc.
# * Durations are of the format "NNhNNmNNs" where h, m and s stand for hours,
#   minutes and seconds respectively, with at least one of them present.

# The address to listen on. The format is "host:port", "ipv4:port" or
# "[ipv6]:port". Omitting the host binds to all interfaces. The default is
# ":8080".
listen = ":8080"
#listen = "127.0.0.1:8080"
#listen = "[::1]:8080"
#listen = "10.0.23.1:8081"

# The connection block defines parameters for the PostgreSQL connection pool.
# This block is required.
connection {
	# The PostgreSQL DSN to connect to. The format is libpq-style key-value
	# pairs separated by spaces. There is no default. ellycache understands
	# pgpass files and PG* environment variables.
	dsn = "host=myhost port=myport user=myuser password=mypass dbname=mydb"
	#dsn = "host=/var/run/postgresql port=5432 user=analytics dbname=posts"
	#dsn = "host=pgbouncer.example.com port=6432 dbname=foobar"

	# The maximum number of concurrent active connections. Optional, defaults
	# to 5.
	maxconns = 10

	# The maximum duration a connection can be idle before it is closed. If
	# omitted, idle connections are NOT closed.
	idletimeout = "5m"
}

# The endpoint block defines a single URI served by ellycache. At least one
# endpoint block is required. The URI path should be absolute, and specified
# as a string parameter for the block.
endpoint "/foobar" {
	# The SQL command, whose results are cached and served at this URI. This
	# is a required parameter.
	sql = "SELECT * FROM foobar"

	# The query timeout for the SQL query above. Optional. If not specified,
	# no timeout is enforced by ellycache.
	sqltimeout = "1m"

	# The schedule to execute this query, in standard cron syntax specified
	# here: https://en.wikipedia.org/wiki/Cron. The '@' format ("@every 1h" etc)
	# is also supported. This is a required parameter.
	schedule = "*/10 * * * *"

	# Each row can be represented as an array or an object in the returned json.
	# Use "array" (the default) or "object" as the value for this parameter.
	rowformat = "array"

	# If the filebacked parameter is set to true, then the result is not cached
	# in memory, but stored in an encrypted temporary file instead. Use this for
	# large query results. Optional, defaults to false.
	filebacked = true
}
